###########################################################################################
#   Read me for the inversion of ellipticity curve measured with DOP-E measurement code   #
###########################################################################################

Created by Andrea Berbellini, November 2018
For questions, bugs, comments please email me: andrea.berbellini@ingv.it 


Citations
--------------------------------------------------------------------
This software is free to download. If used please cite:

Berbellini, A., Schimmel, M., Ferreira, A.M.G., Morelli, A.,
    	Constraining S-wave velocity using Rayleigh wave ellipticity
    	from polarization analysis of seismic noise, Geophysical Journal
    	International, 2018, in press.

The inversion is based on the software created by Malcolm Sembridge:
	Sambridge, M., 1999. Geophysical inversion with a neighbourhood algorithm-I. 
	Searching a parameter space, Geophysical Journal International, 138(2), 479–494.

The forward modelling is based on the package "Computer Programs in Seismology" by
Robert B. Hermann:
	Herrmann, R. B., 2013. Computer Programs in Seismology: An Evolving Tool for 
	Instruction and Research, Seismol. Res. Lett., 84(6), 1081–1088.


Prerequisites
--------------------------------------------------------------------
- gfortran or ifort (we strongly recommend gfortran)
- gcc
- python 2.7
- matplotlib 2.1.2



Preparation and compilation
--------------------------------------------------------------------
- Install Computer Programs in Seismology:
	>  cd to NA/src/hv_subs/PROGRAMS.330/ and type:
	>  ./Setup
	>  Select from the list the best configuration for your machine (in our case LINUX6440)
	>  ./Setup LINUX6440
	>  ./C
	>  Add the path to export PROGRAMS.330/bin to your .bashrc file 
		(export PATH=<path>/Inversion/serial/NA/src/hv_subs/PROGRAMS.330/bin:$PATH)

	For other information about the installation please refer to the detailed guide CPSInstall.pdf in PROGRAMS.330 		folder

- Compile the Neighbourhood Algorithm routines:
	>  cd to NA/src
	>  Edit the file "makena macros" setting your fortran and C compilers. Type variable has to be set to "SERIAL"
	>  make clean
	>  make all

	>  If everything is ok you will get the message: "make all (serial version) completed successfully !"
	


Run a demo inversion
--------------------------------------------------------------------
To run a demo inversion please edit the file run_inversion.py choosing a name for the inversion,
then type:
> python run_inversion.py


This routine will recompile the code then run a full inversion. Finally it will plot the results, that will be found
in the folder results/<name_of_the_inversion>/

The inversion takes approx 1hr time (tested on a laptop with this processor: Intel® Core™ i7-7500U CPU @ 2.70GHz × 4)





















